{"mappings":"CAAC,WACC,MAAMA,EAAWC,SAASC,eAAe,YACnCC,EAASF,SAASC,eAAe,UACjCE,EAAaH,SAASC,eAAe,eACrCG,EAAUJ,SAASC,eAAe,QAElCI,EAAgB,CACpBC,cAAe,WACfC,WAAY,YACZC,SAAU,GACVC,KAAM,IACNC,YAAa,UACbC,cAAe,UACfC,YAAa,OACbC,cAAe,OACfC,cAAe,QACfC,UAAW,UACXC,SAAU,CACRC,MAAO,GACPC,OAAQ,GACRC,SAAU,MAEZC,aAAa,EACbC,kBAAkB,GA+BpB,SAASC,IACP,MACMC,EADUvB,SAASwB,cAAc,QACdC,wBACzBpB,EAAcW,SAAW,CACvBC,MAAOS,KAAKC,MAAMJ,EAASN,OAC3BC,OAAQQ,KAAKC,MAAMJ,EAASL,QAC5BC,SAAUd,EAAcW,SAASG,SAErC,CAyCA,SAASS,EAAQC,GAAW,GAC1B,MAAMC,EA9ER,SAAiBC,GACf,MAAMzB,cACJA,EAAaC,WACbA,EAAUC,SACVA,EAAQC,KACRA,EAAIC,YACJA,EAAWC,cACXA,EAAaC,YACbA,EAAWC,cACXA,EAAaC,cACbA,EAAaC,UACbA,EAASC,SACTA,EAAQI,YACRA,EAAWC,iBACXA,GACEU,EAEEC,EAASX,EAAmB,IAAM,GAGxC,MAAO,iBACGZ,cAAiBA,gBAAwB,KAALA,MAAoB,KAALA,KAAmB,KAALA,KAAkB,KAALA,uGAC7EA,EAAM,EAAK,WAAWA,EAAK,UAAUA,EAAK,iCAAiCC,oBAA8BE,wBAAkCN,oDAC3IG,EAAM,EAAK,WAAWA,EAAK,UAAUA,EAAK,cAAcE,oBAAgCE,sBAAkCC,yBAAqCP,2CAAoDD,eALjNc,EAAc,kBAAkBM,KAAKC,MAAMlB,EAAM,EAAMO,EAASC,MAAM,eAAgBS,KAAKC,MAAMlB,EAAM,EAAMO,EAASE,OAAO,kBAAmBH,iBAAyBC,EAASG,iFAAiFV,EAAO,SAASD,IAAWwB,WAAkB,kBAQ/T,CAoDeC,CAAO5B,GACpBH,EAAOgC,UAAYJ,EACnB3B,EAAWgC,UAAYL,EACnBD,IACFP,IACAM,GAAO,GAEX,CAWAA,GAAO,GAEP7B,EAASqC,iBAAiB,SA5D1B,SAA2BC,GACzB,IAAIC,EAAQD,EAAEE,OAAOD,MACjBT,GAAW,EACf,GAAsB,aAAlBQ,EAAEE,OAAOC,KAAqB,CAChC,MACMlC,EAAgB,MADPD,EAAeI,KAAK,EAAK,IACN,EAClCJ,EAAcE,WAAamB,KAAKC,MAAMrB,IAAgB,IAAI+B,EAAEE,OAAOE,eAAe,MAAQ,KAC3D,IAA3BJ,EAAEE,OAAOE,cACXpC,EAAcM,cAAgBN,EAAcK,YACnC2B,EAAEE,OAAOE,cAAgB,GAAMpC,EAAcM,gBAAkBN,EAAcK,cACtFL,EAAcM,cAAgBZ,EAASY,cAAc2B,OAEvDhB,IACAO,GAAW,CACb,MAAO,GAAsB,SAAlBQ,EAAEE,OAAOC,KAAiB,CACnC,MACMlC,EAAgB,MADP+B,EAAGE,OAAOE,cAAc,EAAK,IACV,EAClCpC,EAAcC,cAAgBA,EAAgB,KAC9CD,EAAcE,WAAamB,KAAKC,MAAMrB,IAAgB,IAAID,EAAcG,UAAU,MAAQ,IAC5F,MAAO,GAAsB,aAAlB6B,EAAEE,OAAOG,KAClBJ,EAAQD,EAAEE,OAAOI,QACK,qBAAlBN,EAAEE,OAAOC,MACXlB,IAEFO,GAAW,OACN,GAAsB,aAAlBQ,EAAEE,OAAOC,KAAqB,CACvC,MACMjB,EADUvB,SAASwB,cAAc,QACdC,wBACzBa,EAAQ,CACNrB,MAAOS,KAAKC,MAAMJ,EAASN,OAC3BC,OAAQQ,KAAKC,MAAMJ,EAASL,QAC5BC,SAAUmB,GAEZT,GAAW,CACb,CACAxB,EAAcgC,EAAEE,OAAOC,MAAQF,EAC/BV,EAAOC,EACT,IAwBAzB,EAAQgC,iBAAiB,SAZzB,SAAqBC,GACnBO,UAAUC,UAAUC,UAAU3C,EAAWgC,WACzC,MAAMY,EAAeV,EAAEE,OAAOJ,UAC9BE,EAAEE,OAAOJ,UAAY,UACrBa,YAAW,WACTX,EAAEE,OAAOJ,UAAYY,CACvB,GAAG,IACL,GAMF,CA9HC","sources":["script.js"],"sourcesContent":["(function () {\n  const controls = document.getElementById(\"controls\")\n  const output = document.getElementById(\"output\")\n  const outputCode = document.getElementById(\"output-code\")\n  const copyBtn = document.getElementById(\"copy\")\n  \n  const svgAttributes = {\n    circumference: \"565.48px\",\n    percentage: \"118.692px\",\n    progress: 79,\n    size: 200,\n    circleColor: \"#e0e0e0\",\n    progressColor: \"#76e5b1\",\n    circleWidth: \"16px\",\n    progressWidth: \"16px\",\n    progressShape: \"round\",\n    textColor: \"#6bdba7\",\n    textSize: {\n      width: 50,\n      height: 50,\n      fontSize: \"52\"\n    },\n    valueToggle: true,\n    percentageToggle: false\n  }\n\n  function getSvg (attributes) {\n    const {\n      circumference,\n      percentage,\n      progress,\n      size,\n      circleColor,\n      progressColor,\n      circleWidth,\n      progressWidth,\n      progressShape,\n      textColor,\n      textSize,\n      valueToggle,\n      percentageToggle\n    } = attributes\n\n    const suffix = percentageToggle ? '%' : ''\n    const text = valueToggle ? `\\n    <text x=\"${Math.round((size/2) - (textSize.width/1.75))}px\" y=\"${Math.round((size/2) + (textSize.height/3.25))}px\" fill=\"${textColor}\" font-size=\"${textSize.fontSize}px\" font-weight=\"bold\" style=\"transform:rotate(90deg) translate(0px, -${size - 4}px)\">${progress}${suffix}</text>` : ''\n\n    return `\n<svg width=\"${size}\" height=\"${size}\" viewBox=\"-${size*0.125} -${size*0.125} ${size*1.25} ${size*1.25}\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" style=\"transform:rotate(-90deg)\">\n  <circle r=\"${(size/2) - 10}\" cx=\"${size/2}\" cy=\"${size/2}\" fill=\"transparent\" stroke=\"${circleColor}\" stroke-width=\"${circleWidth}\" stroke-dasharray=\"${circumference}\" stroke-dashoffset=\"0\"></circle>\n  <circle r=\"${(size/2) - 10}\" cx=\"${size/2}\" cy=\"${size/2}\" stroke=\"${progressColor}\" stroke-width=\"${progressWidth}\" stroke-linecap=\"${progressShape}\" stroke-dashoffset=\"${percentage}\" fill=\"transparent\" stroke-dasharray=\"${circumference}\"></circle>${text}\n</svg>\n    `\n  }\n\n  function setTextSize () {\n    const svgText = document.querySelector('text')\n    const textRect = svgText.getBoundingClientRect()\n    svgAttributes.textSize = {\n      width: Math.round(textRect.width),\n      height: Math.round(textRect.height),\n      fontSize: svgAttributes.textSize.fontSize\n    }\n  }\n\n  function handleFormChange (e) {\n    let value = e.target.value\n    let rerender = false\n    if (e.target.name === \"progress\") {\n      const radius = (svgAttributes.size/2) - 10\n      const circumference = 3.14*radius*2\n      svgAttributes.percentage = Math.round(circumference*((100-e.target.valueAsNumber)/100)) + 'px'\n      if (e.target.valueAsNumber === 0) {\n        svgAttributes.progressColor = svgAttributes.circleColor\n      } else if (e.target.valueAsNumber > 0 && (svgAttributes.progressColor === svgAttributes.circleColor)) {\n        svgAttributes.progressColor = controls.progressColor.value\n      }\n      setTextSize()\n      rerender = true\n    } else if (e.target.name === \"size\") {\n      const radius = (e.target.valueAsNumber/2) - 10\n      const circumference = 3.14*radius*2\n      svgAttributes.circumference = circumference + \"px\"\n      svgAttributes.percentage = Math.round(circumference*((100-svgAttributes.progress)/100)) + \"px\"\n    } else if (e.target.type === \"checkbox\") {\n      value = e.target.checked\n      if (e.target.name === \"percentageToggle\") {\n        setTextSize()\n      }\n      rerender = true\n    } else if (e.target.name === \"textSize\") {\n      const svgText = document.querySelector('text')\n      const textRect = svgText.getBoundingClientRect()\n      value = {\n        width: Math.round(textRect.width),\n        height: Math.round(textRect.height),\n        fontSize: value\n      }\n      rerender = true\n    }\n    svgAttributes[e.target.name] = value\n    setSvg(rerender)\n  }\n\n  function setSvg (rerender = false) {\n    const html = getSvg(svgAttributes)\n    output.innerHTML = html\n    outputCode.innerText = html\n    if (rerender) {\n      setTextSize()\n      setSvg(false)\n    }\n  }\n\n  function handleCopy (e) {\n    navigator.clipboard.writeText(outputCode.innerText)\n    const currentValue = e.target.innerText\n    e.target.innerText = \"Copied!\"\n    setTimeout(function() {\n      e.target.innerText = currentValue\n    }, 2000)\n  }\n\n  setSvg(false)\n\n  controls.addEventListener(\"input\", handleFormChange)\n  copyBtn.addEventListener(\"click\", handleCopy)\n})()"],"names":["controls","document","getElementById","output","outputCode","copyBtn","svgAttributes","circumference","percentage","progress","size","circleColor","progressColor","circleWidth","progressWidth","progressShape","textColor","textSize","width","height","fontSize","valueToggle","percentageToggle","setTextSize","textRect","querySelector","getBoundingClientRect","Math","round","setSvg","rerender","html","attributes","suffix","getSvg","innerHTML","innerText","addEventListener","e","value","target","name","valueAsNumber","type","checked","navigator","clipboard","writeText","currentValue","setTimeout"],"version":3,"file":"index.514ed7b5.js.map"}